<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>从0开始css</title>
      <link href="/2021/11/16/cong-0-kai-shi-css/"/>
      <url>/2021/11/16/cong-0-kai-shi-css/</url>
      
        <content type="html"><![CDATA[<h1 id="从0开始css"><a href="#从0开始css" class="headerlink" title="从0开始css"></a>从0开始css</h1><hr><h2 id="1-圆角边框"><a href="#1-圆角边框" class="headerlink" title="1.圆角边框"></a>1.圆角边框</h2><ul><li>圆角边框可以通过css的属性<code>border-radius：length</code>来实现，其中的length为圆形与直角边相切半径</li><li>圆形盒子半径设为正方形一半即可，写 50%</li><li>圆角矩形设置为高度的50%</li></ul><blockquote><p>注意该属性为css3新增，可能有兼容性问题</p></blockquote><img src="/2021/11/16/cong-0-kai-shi-css/css-01.png" class=""><pre class="line-numbers language-none"><code class="language-none">&lt;style&gt;    &#x2F;* 圆角矩形做法 *&#x2F;    div.demo1 &#123;        width: 300px;        height: 150px;        background-color: pink;        &#x2F;* 圆角 *&#x2F;        border-radius: 75px;    &#125;    &#x2F;* 圆形做法 *&#x2F;    div.demo2 &#123;        width: 300px;        height: 300px;        background-color: pink;        &#x2F;* border-radius: 150px; *&#x2F;        border-radius: 50%;    &#125;    &#x2F;* 不同圆角做法 *&#x2F;    div.demo3 &#123;        width: 300px;        height: 300px;        background-color: pink;        &#x2F;* border-radius: 150px; *&#x2F;        border-radius: 10px 20px;    &#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="2-盒子阴影"><a href="#2-盒子阴影" class="headerlink" title="2.盒子阴影"></a>2.盒子阴影</h2><ul><li>1.默认outset但是不要写，否则失效。</li><li>2.<strong>盒子阴影不占用空间，不影响其他盒子排列</strong></li><li>3.鼠标经过出现影子:hover做<img src="/2021/11/16/cong-0-kai-shi-css/css-02.png" class=""></li></ul><blockquote><p>该属性为css3新增</p></blockquote><pre class="line-numbers language-none"><code class="language-none">&lt;style&gt;        div &#123;            width: 200px;            height: 200px;            background-color: pink;            margin: 100px auto;        &#125;        div:hover &#123;            box-shadow: 10px 10px 10px -4px rgba(0, 0, 0, .3);        &#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="3-文字阴影"><a href="#3-文字阴影" class="headerlink" title="3.文字阴影"></a>3.文字阴影</h2><img src="/2021/11/16/cong-0-kai-shi-css/css-03.png" class=""><pre class="line-numbers language-none"><code class="language-none">&lt;style&gt;        div &#123;            font-size: 50px;            color: orange;            font-weight: 700;        &#125;        div:hover &#123;            text-shadow: 5px 5px 6px rgba(0, 0, 0, .3);        &#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="4-网页布局"><a href="#4-网页布局" class="headerlink" title="4.网页布局"></a>4.网页布局</h2><ul><li>网页布局准则：<strong>多个块级元素纵向排列找标准流，横向排列找浮动</strong></li><li>传统网页布局的本质就是用css来摆放盒子</li><li>css提供了三种传统布局方式，分别是<ul><li>1.普通流（标准流）</li><li>2.浮动</li><li>3.定位</li></ul></li></ul><hr><h2 id="5-标准流"><a href="#5-标准流" class="headerlink" title="5.标准流"></a>5.标准流</h2><img src="/2021/11/16/cong-0-kai-shi-css/css-04.png" class=""><hr><h2 id="6-浮动"><a href="#6-浮动" class="headerlink" title="6.浮动"></a>6.浮动</h2><img src="/2021/11/16/cong-0-kai-shi-css/css-05.png" class=""><hr><h3 id="6-1浮动特性"><a href="#6-1浮动特性" class="headerlink" title="6.1浮动特性"></a>6.1浮动特性</h3><ol><li><strong>浮动元素会脱离标准流（脱标）</strong>，即脱离标准流的控制（浮）移动到指定位置（动）</li><li>浮动的元素会一行内显示并且元素顶部对齐</li><li>浮动的元素会具有行内块元素的特性</li><li>浮动的盒子<strong>不再保留原来的位置</strong></li><li>浮动的元素与定位不同，只会压住下面标准流动盒子，但是不会压住标准流盒子里的文字与图片（类似环绕效果）</li><li>浮动的盒子在同一行顶端对齐，相互贴靠没有缝隙。但是<strong>注意如果父盒子的宽度装不下浮动盒子，多动盒子会另起一行对齐</strong></li><li>浮动的元素具有行内块元素的特性，不用再<code>display:inline-block</code>,可以直接设置宽高。注意，块级盒子没有设置宽度时默认与父元素一样宽，但是添加浮动后<strong>大小根据浮动盒子的内容决定</strong>，这点与行内元素一样。<img src="/2021/11/16/cong-0-kai-shi-css/css-06.png" class=""></li></ol><pre class="line-numbers language-none"><code class="language-none">&lt;style&gt;        .box1 &#123;            width: 200px;            height: 200px;            background-color: pink;            &#x2F;* 脱标后位置被占有  *&#x2F;            float: left;        &#125;        .box2 &#123;            width: 300px;            height: 300px;            background-color: blue;        &#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="6-2浮动元素搭配标准流父级元素"><a href="#6-2浮动元素搭配标准流父级元素" class="headerlink" title="6.2浮动元素搭配标准流父级元素"></a>6.2浮动元素搭配标准流父级元素</h3><ul><li>为了约束元素的位置我们通常采用先用标准流的父元素排列上下位置，再在内部使用浮动进行左右位置的排列<img src="/2021/11/16/cong-0-kai-shi-css/css-07.png" class=""></li></ul><hr><h3 id="6-3浮动布局的注意点"><a href="#6-3浮动布局的注意点" class="headerlink" title="6.3浮动布局的注意点"></a>6.3浮动布局的注意点</h3><ol><li>先用标准流父元素上下排列，再在内部进行子元素浮动左右排列</li><li>一个元素浮动了理论上其余兄弟元素也要浮动。所谓<strong>一浮全浮</strong>。</li><li>浮动的盒子只影响后面的标准流盒子，不会影响之前的。</li></ol><hr><h3 id="6-4清除浮动"><a href="#6-4清除浮动" class="headerlink" title="6.4清除浮动"></a>6.4清除浮动</h3><h4 id="6-4-1为什么要清除浮动"><a href="#6-4-1为什么要清除浮动" class="headerlink" title="6.4.1为什么要清除浮动"></a>6.4.1为什么要清除浮动</h4><p>由于父级盒子在很多情况下不方便设定高度，但是子盒子浮动不占有位置，导致父盒子会影响下面的标准流盒子。</p><img src="/2021/11/16/cong-0-kai-shi-css/css-08.png" class=""><h4 id="6-4-2清除浮动的本质"><a href="#6-4-2清除浮动的本质" class="headerlink" title="6.4.2清除浮动的本质"></a>6.4.2清除浮动的本质</h4><ul><li>清除浮动的本质是清除浮动元素造成的影响</li><li>如果父盒子本身设定了高度，就不需要清除浮动</li><li>清除浮动后，父级会根据浮动的子盒子自动监测高度，父级有了高度就不会影响下面的标准流盒子。</li></ul><h4 id="6-4-3清除浮动的方法"><a href="#6-4-3清除浮动的方法" class="headerlink" title="6.4.3清除浮动的方法"></a>6.4.3清除浮动的方法</h4><ol><li><strong>额外标签法</strong><br>在浮动的元素末尾添加一个空标签。例如<code>&lt;div style=&quot;clear:both&quot;&gt;&lt;/div&gt;</code>,或者其他标签（如<code>&lt;br/&gt;</code>）</li></ol><ul><li>优点：通俗易懂，书写方便</li><li>缺点：添加了许多无意义表情，结构化差</li></ul><ol start="2"><li><strong>父级添加overflow</strong><br>可以给父级添加<code>overflow</code>属性，属性值可以为<code>hidden</code>、<code>auto</code>或<code>scroll</code></li></ol><ul><li>优点：代码简介</li><li>缺点：无法显示溢出的部分</li></ul><ol start="3"><li><p><strong>父级:after伪元素法</strong><br><code>:after</code>方法是额外标签法的升级版，是给父元素添加。该写法结构简单，写法高级。</p><pre class="line-numbers language-none"><code class="language-none">.clearfix:after &#123;    content:&quot;&quot;;    display:block;    height:0;    clear:both;    visibility:hidden;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>父级双伪元素清除浮动</strong></p></li></ol><ul><li>推荐使用该写法<pre class="line-numbers language-none"><code class="language-none">.clearfix:before,.clearfix:after &#123;    content:&quot;&quot;;    display:table;&#125;.clearfix:after &#123;    clear:both&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><blockquote><p>注意IE6-7不支持after，会有兼容性问题（但是IE已经快消失了，所以问题不大）</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 前端学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>示例文章</title>
      <link href="/2021/11/15/shi-li-wen-zhang/"/>
      <url>/2021/11/15/shi-li-wen-zhang/</url>
      
        <content type="html"><![CDATA[<h1 id="百年孤独"><a href="#百年孤独" class="headerlink" title="百年孤独"></a>百年孤独</h1><hr><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><blockquote><p>这是区块引用</p></blockquote><p><a href="http://www.100niangudu.com/4.html">点击在线阅读</a><br><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.mp.sohu.com%2Fupload%2F20170605%2F94bd907beefc45cd92c374f8c15770c9.png&refer=http%3A%2F%2Fimg.mp.sohu.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=jpeg?sec=1639655210&t=8896f0d726b279b9f6515dc656434b44" width=200><br>&emsp;&emsp;多年以后，奥雷连诺上校站在行刑队面前，准会想起父亲带他去参观冰块的那个遥远的下午。当时，马孔多是个二十户人家的村庄，一座座土房都盖在河岸上，河水清澈，沿着遍布石头的河床流去，河里的石头光滑、洁白，活象史前的巨蛋。<br>&emsp;&emsp;这块天地还是新开辟的，许多东西都叫不出名字，不得不用手指指点点。每年三月，衣衫褴楼的吉卜赛人都要在村边搭起帐篷，在笛鼓的喧嚣声中，向马孔多的居民介绍科学家的最新发明。他们首先带来的是磁铁。一个身躯高大的吉卜赛人，自称梅尔加德斯，满脸络腮胡子，手指瘦得象鸟的爪子，向观众出色地表演了他所谓 的马其顿炼金术士创造的世界第八奇迹。他手里拿着两大块磁铁，从一座农舍走到另一座农舍，大家都惊异地看见，铁锅、铁盆、铁钳、铁炉都从原地倒下，木板上的钉子和螺丝嘎吱嘎吱地拼命想挣脱出来，甚至那些早就丢失的东西也从找过多次的地方兀然出现，乱七八糟地跟在梅尔加德斯的魔铁后面。“东西也是有生命的，”</p>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的博客第一篇文章</title>
      <link href="/2021/11/15/article-title/"/>
      <url>/2021/11/15/article-title/</url>
      
        <content type="html"><![CDATA[<p>你好哇你好哇 欢迎来到我的博客</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/15/hello-world/"/>
      <url>/2021/11/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
